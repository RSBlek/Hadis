#pragma once

class SM_STATS_INFO_Packet {
public:	
	unsigned int objectid;
	unsigned int gametime;
	short currentpower;
	short currenthealth;
	short currentaccuracy;
	short currentagility;
	short currentknowledge;
	short currentwill;
	short currentwaterresist;
	short currentwindresist;
	short currentearthresist;
	short currentfireresist;
	short currentlightresist;
	short currentdarkresist;
	short level;
	long long needexp;
	long long recoverableexp;
	long long currentexp;
	int maxhp;
	int currenthp;
	int maxmp;
	int currentmp;
	short maxdp;
	short currentdp;
	int maxflytime;
	int currentflytime;
	short flystate;
	short currentmainhandpattack;
	short currentoffhandpattack;
	int currentphysdefence;
	short currentmainhandmagicattack;
	short currentoffhandmagicattack;
	int currentmagicdef;
	short currentmagicresist;
	short currentmagiccritresist_unknown;
	float currentattackrange;
	short currentattackspeed;
	short currentevasion;
	short currentparry;
	short currentblock;
	short currentmainhandpcritrate;
	short currentoffhandpcritcrate;
	short currentmainhandpaccuracy;
	short currentoffhandpaccuracy;
	short currentmagicaccuracy;
	short currentmagiccrit;
	short currentmagiccritoff;
	float currentcastingspeed;
	short currentconcentration;
	short currentmagicboost;
	short currentmagicboostsupression;
	short currenthealboost;
	short currentcritstrikeresist;
	short currentmagiccritresist;
	short currentstrikefortitude;
	short currentspellfortitude;
	int cubesize;
	int inventorysize;
	int classid;

	SM_STATS_INFO_Packet(char* p) {
		unsigned short c = 5; //2 Bytes for opcode and 3 for checksum
		objectid = *((unsigned int*)(p + c)); c += (sizeof(objectid));
		gametime = *((unsigned int*)(p + c)); c += (sizeof(gametime));
		currentpower = *((short*)(p + c)); c += (sizeof(currentpower));
		currenthealth = *((short*)(p + c)); c += (sizeof(currenthealth));
		currentaccuracy= *((short*)(p + c)); c += (sizeof(currentaccuracy));
		currentagility = *((short*)(p + c)); c += (sizeof(currentagility));
		currentknowledge = *((short*)(p + c)); c += (sizeof(currentknowledge));
		currentwill = *((short*)(p + c)); c += (sizeof(currentwill));
		currentwaterresist = *((short*)(p + c)); c += (sizeof(currentwaterresist));
		currentwindresist = *((short*)(p + c)); c += (sizeof(currentwindresist));
		currentearthresist = *((short*)(p + c)); c += (sizeof(currentearthresist));
		currentfireresist = *((short*)(p + c)); c += (sizeof(currentfireresist));
		currentlightresist = *((short*)(p + c)); c += (sizeof(currentlightresist));
		currentdarkresist = *((short*)(p + c)); c += (sizeof(currentdarkresist));
		level = *((short*)(p + c)); c += (sizeof(level));
		unknown01 = *((short*)(p + c)); c += (sizeof(unknown01));
		unknown02 = *((short*)(p + c)); c += (sizeof(unknown02));
		unknown03 = *((short*)(p + c)); c += (sizeof(unknown03));
		needexp = *((long long*)(p + c)); c += (sizeof(needexp));
		recoverableexp = *((long long*)(p + c)); c += (sizeof(recoverableexp));
		currentexp = *((long long*)(p + c)); c += (sizeof(currentexp));
		unknown04 = *((int*)(p + c)); c += (sizeof(unknown04));
		maxhp = *((int*)(p + c)); c += (sizeof(maxhp));
		currenthp = *((int*)(p + c)); c += (sizeof(currenthp));
		maxmp = *((int*)(p + c)); c += (sizeof(maxmp));
		currentmp = *((int*)(p + c)); c += (sizeof(currentmp));
		maxdp = *((short*)(p + c)); c += (sizeof(maxdp));
		currentdp = *((short*)(p + c)); c += (sizeof(currentdp));
		maxflytime = *((int*)(p + c)); c += (sizeof(maxflytime));
		currentflytime = *((int*)(p + c)); c += (sizeof(currentflytime));
		flystate = *((short*)(p + c)); c += (sizeof(flystate));
		currentmainhandpattack = *((short*)(p + c)); c += (sizeof(currentmainhandpattack));
		currentoffhandpattack = *((short*)(p + c)); c += (sizeof(currentoffhandpattack));
		unknown05 = *((short*)(p + c)); c += (sizeof(unknown05));
		currentphysdefence = *((int*)(p + c)); c += (sizeof(currentphysdefence));
		currentmainhandmagicattack = *((short*)(p + c)); c += (sizeof(currentmainhandmagicattack));
		currentoffhandmagicattack = *((short*)(p + c)); c += (sizeof(currentoffhandmagicattack));
		currentmagicdef = *((int*)(p + c)); c += (sizeof(currentmagicdef));
		currentmagicresist = *((short*)(p + c)); c += (sizeof(currentmagicresist));
		currentmagiccritresist_unknown = *((short*)(p + c)); c += (sizeof(currentmagiccritresist_unknown));
		currentattackrange = *((float*)(p + c)); c += (sizeof(currentattackrange));
		currentattackspeed = *((short*)(p + c)); c += (sizeof(currentattackspeed));
		currentevasion = *((short*)(p + c)); c += (sizeof(currentevasion));
		currentparry = *((short*)(p + c)); c += (sizeof(currentparry));
		currentblock = *((short*)(p + c)); c += (sizeof(currentblock));
		currentmainhandpcritrate = *((short*)(p + c)); c += (sizeof(currentmainhandpcritrate));
		currentoffhandpcritcrate = *((short*)(p + c)); c += (sizeof(currentoffhandpcritcrate));
		currentmainhandpaccuracy = *((short*)(p + c)); c += (sizeof(currentmainhandpaccuracy));
		currentoffhandpaccuracy = *((short*)(p + c)); c += (sizeof(currentoffhandpaccuracy));
		unknown06 = *((short*)(p + c)); c += (sizeof(unknown06));
		currentmagicaccuracy = *((short*)(p + c)); c += (sizeof(currentmagicaccuracy));
		currentmagiccrit = *((short*)(p + c)); c += (sizeof(currentmagiccrit));
		currentmagiccritoff = *((short*)(p + c)); c += (sizeof(currentmagiccritoff));
		currentcastingspeed = *((float*)(p + c)); c += (sizeof(currentcastingspeed));
		unknown07 = *((short*)(p + c)); c += (sizeof(unknown07));
		currentconcentration = *((short*)(p + c)); c += (sizeof(currentconcentration));
		currentmagicboost = *((short*)(p + c)); c += (sizeof(currentmagicboost));
		currentmagicboostsupression = *((short*)(p + c)); c += (sizeof(currentmagicboostsupression));
		currenthealboost = *((short*)(p + c)); c += (sizeof(currenthealboost));
		unknown08 = *((short*)(p + c)); c += (sizeof(unknown08));
		currentcritstrikeresist = *((short*)(p + c)); c += (sizeof(currentcritstrikeresist));
		currentmagiccritresist = *((short*)(p + c)); c += (sizeof(currentmagiccritresist));
		currentstrikefortitude = *((short*)(p + c)); c += (sizeof(currentspellfortitude));
		currentspellfortitude = *((short*)(p + c)); c += (sizeof(currentspellfortitude));
		cubesize = *((int*)(p + c)); c += (sizeof(cubesize));
		inventorysize = *((int*)(p + c)); c += (sizeof(inventorysize));
		unknown09 = *((long long*)(p + c)); c += (sizeof(unknown09));
		classid = *((int*)(p + c)); c += (sizeof(classid));
	}


private:
	short unknown01;
	short unknown02;
	short unknown03;
	int unknown04;
	short unknown05;
	short unknown06;
	short unknown07;
	short unknown08;
	long long unknown09;
};